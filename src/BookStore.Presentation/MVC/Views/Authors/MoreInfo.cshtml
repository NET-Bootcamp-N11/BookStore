@using BookStore.Domain.Entities
@model AuthorsMoreInfoViewModel

<div class="container mt-5">
    <div class="row mb-2">
        <div class="col-md-8">
            <h1>@Model.Author.Name</h1>
            <p class="name">@Model.Author.Name</p>
            <p class="description">@Model.Author.Description</p>
        </div>
        <div class="col-md-4 text-center">
            <img src="@Model.Author.PhotoPath" alt="Author Photo" class="img-fluid rounded">
        </div>
        <br />
        <hr />
        @if(Model.Books is not null)
        {   
        <h3 class="d-block">Muallif Kitoblari</h3>
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var book in Model.Books)
            {
                <div class="card" style="width: 18rem;">
                    <img src="@book.PhotoPath" class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">
                            <a href="@Url.Action("MoreInfo", "Books", new { id = book.Id })">@book.Title</a>
                        </h5>
                    </div>
                    @if (User.Identity.IsAuthenticated)
                    {
                    <div class="card-body">
                        <a href="@Url.Action("Delete", new { id = book.Id })" class="btn btn-danger">Delete</a>
                        <a href="@Url.Action("Update", new { id = book.Id })" class="btn btn-secondary">Update</a>
                    </div>
                    }
                </div>
            }
        </div>
        }
    </div>
</div>
        