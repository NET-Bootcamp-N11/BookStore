@using BookStore.Domain.Entities
@model PaginationViewModel<Book>

@{
    ViewData["Title"] = "Book";
}

@if (User.Identity.IsAuthenticated)
{
    <div class="row mb-3">
        <a class="col-2 text-dark btn btn-light" asp-area="" asp-controller="Genres" asp-action="Index"><i class='bx bx-category-alt'></i> Genres</a>
        <div class="col-6 m-auto">
            <form id="searchForm" class="d-flex gap-2" asp-controller="Books" asp-action="Index" method="get">
                <input type="search" id="searchInput" class="form-control" aria-describedby="search" name="text" placeholder="Enter book name...">
            </form>
        </div>
        <a class="col-2 text-dark btn btn-light" asp-area="" asp-controller="Likes" asp-action="Index"><i class='bx bx-heart'></i> Likes</a>
        <a class="col-2 text-dark btn btn-light" asp-area="" asp-controller="Cart" asp-action="Orders">Orders</a>
    </div>
}
else
{
    <div class="row mb-3">
        <a class="col-2 text-dark btn btn-light" asp-area="" asp-controller="Genres" asp-action="Index"><i class='bx bx-category-alt'></i> Genres</a>
        <div class="col-8 m-auto">
            <form id="searchForm" class="d-flex gap-2" asp-controller="Books" asp-action="Index" method="get">
                <input type="search" id="searchInput" class="form-control" aria-describedby="search" name="text" placeholder="Enter book name...">
            </form>
        </div>
        <a class="col-2 text-dark btn btn-light" asp-area="" asp-controller="Likes" asp-action="Index"><i class='bx bx-heart'></i> Likes</a>
    </div>
}

<script>
    document.addEventListener('DOMContentLoaded',
        function () {
            const savedQuery = localStorage.getItem('searchQuery');
            if (savedQuery) {
                document.getElementById('searchInput').value = savedQuery;
            }

            document.getElementById('searchInput').focus();

            document.getElementById('searchInput').addEventListener('input', function () {
                const inputValue = this.value.trim();
                localStorage.setItem('searchQuery', inputValue);
                document.getElementById('searchForm').submit();
            });
        });
</script>

@if (User.Identity.IsAuthenticated && (User.IsInRole("SuperAdmin") || User.IsInRole("Admin")))
{
    <a asp-controller="Books" asp-action="Create" class="btn btn-primary">
        <i class='bx bx-plus'></i>
    </a>
}

<div class="row row-cols-1 row-cols-md-3 g-4 justify-content-center">
    @foreach (var book in Model.Objects)
    {
        <div class="card mx-2" style="width: 18rem; border:none">
            <a class="fancybox-frame profile-picture" data-fancybox href="@book.PhotoPath">
                <img src="@book.PhotoPath" style="height: 250px; object-fit: cover;" class="card-img card-img-top mt-3" alt="...">
            </a>

            <div class="card-body">
                <h5 class="card-title"><a href="@Url.Action("MoreInfo", new { id = book.Id })">@book.Title</a></h5>
                <p class="card-text">Author: <a href="@Url.Action("MoreInfo", "Authors", new { id = book.Author.Id })">@book.Author.Name</a></p>
            </div>

            <div class="card-body">
                @if (User.Identity.IsAuthenticated && (User.IsInRole("SuperAdmin") || User.IsInRole("Admin")))
                {
                    <a href="@Url.Action("Delete", new { id = book.Id })" class="btn btn-danger">Delete</a>
                    <a href="@Url.Action("Update", new { id = book.Id })" class="btn btn-secondary">Update</a>
                }
                else
                {
                    <a asp-controller="Cart" asp-action="AddToCart" asp-route-bookId ="@book.Id" class="btn add-card-btn btn-outline-primary"><i class='bx bx-cart-add'></i></a>
                    <span class="price">@book.Price</span>
                    <span class=""> so'm</span>
                }
            </div>
        </div>
    }
</div>

<!-- Pagination controls -->
@if (Model.TotalPages > 1)
{
    <div style="display: flex; justify-content: center; align-items: center; gap: 5px">
        @if (Model.CurrentPage == 1)
        {
            <div class="btn btn-primary">1</div>
        }

        @if (Model.CurrentPage > 1)
        {
            <a class="btn btn-outline-primary" href="@Url.Action("Index", new { page = Model.CurrentPage - 1 })"><i class='bx bx-chevrons-left bx-burst'></i></a>
        }

        @if (Model.CurrentPage != 1)
        {
            <a class="btn btn-outline-primary" href="@Url.Action("Index", new { page = 1 })">1</a>
        }

        @if (Model.CurrentPage > 2)
        {
            <span>...</span>
        }

        @for (int i = Model.CurrentPage - 1; i <= Model.CurrentPage + 1 && i <= Model.TotalPages; i++)
        {
            if (i > 1 && i < Model.TotalPages)
            {
                if (i == Model.CurrentPage)
                {
                    <div class="btn btn-primary">@i</div>
                }
                else
                {
                    <a class="btn btn-outline-primary" href="@Url.Action("Index", new { page = i })">@i</a>
                }
            }
        }

        @if (Model.CurrentPage < Model.TotalPages - 1)
        {
            <span>...</span>
        }

        @if (Model.TotalPages != Model.CurrentPage && Model.TotalPages > 1)
        {
            <a class="btn btn-outline-primary" href="@Url.Action("Index", new { page = Model.TotalPages })">@Model.TotalPages</a>
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <a class="btn btn-outline-primary" href="@Url.Action("Index", new { page = Model.CurrentPage + 1 })"><i class='bx bx-chevrons-right bx-burst'></i></a>
        }

        @if (Model.CurrentPage == Model.TotalPages)
        {
            <div class="btn btn-primary">@Model.CurrentPage</div>
        }
    </div>
}