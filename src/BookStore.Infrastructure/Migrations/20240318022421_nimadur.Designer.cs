// <auto-generated />
using BookStore.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStore.Infrastructure.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20240318022421_nimadur")]
    partial class nimadur
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("BookGenre", b =>
                {
                    b.Property<long>("BooksId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenresId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BooksId", "GenresId");

                    b.HasIndex("GenresId");

                    b.ToTable("BookGenre");
                });

            modelBuilder.Entity("BookStore.Domain.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Zo'r inson",
                            Name = "O'tkir Hoshimov"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Zo'r inson",
                            Name = "Abdulla Qodiriy"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Zo'r inson",
                            Name = "Xudoyberdi To'xtaboyev"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Zo'r inson",
                            Name = "Asqad Maxtor"
                        });
                });

            modelBuilder.Entity("BookStore.Domain.Entities.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AuthorId = 1,
                            Description = "Zo'r kitob",
                            Title = "Dunyoning ishlari"
                        },
                        new
                        {
                            Id = 2L,
                            AuthorId = 2,
                            Description = "Zo'r kitob",
                            Title = "O'tgan kunlar"
                        },
                        new
                        {
                            Id = 3L,
                            AuthorId = 3,
                            Description = "Zo'r kitob",
                            Title = "Besh bolali yigitcha"
                        },
                        new
                        {
                            Id = 4L,
                            AuthorId = 4,
                            Description = "Zo'r kitob",
                            Title = "Chinor"
                        });
                });

            modelBuilder.Entity("BookStore.Domain.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tarixiy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Romantic"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Melodrama"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fantastic"
                        });
                });

            modelBuilder.Entity("BookGenre", b =>
                {
                    b.HasOne("BookStore.Domain.Entities.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.Domain.Entities.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookStore.Domain.Entities.Book", b =>
                {
                    b.HasOne("BookStore.Domain.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BookStore.Domain.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
